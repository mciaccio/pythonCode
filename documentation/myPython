

***
*** python notes
*** 24 April 2016
***

# IDLE
/Applications/Python 3.5/IDLE.app
#

#
$ python3
Python 3.5.1 (v3.5.1:37a07cee5969, Dec  5 2015, 21:12:44) 
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> ^D

#
Michaels-MacBook-Pro-2:~ MenfiSystems$ python
Python 2.7.10 (default, Oct 23 2015, 19:19:21) 
[GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)] on darwin 

#
Michaels-MacBook-Pro-2:~ MenfiSystems$ which python
/usr/bin/python

#
Michaels-MacBook-Pro-2:~ MenfiSystems$ /usr/bin/python
Python 2.7.10 (default, Oct 23 2015, 19:19:21) 
[GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)] on darwin

#
Michaels-MacBook-Pro-2:udacityPythonCode2016 MenfiSystems$ python --version
Python 2.7.10

#
Michaels-MacBook-Pro-2:udacityPythonCode2016 MenfiSystems$ python -V
Python 2.7.10

#
Michaels-MacBook-Pro-2:udacityPythonCode2016 MenfiSystems$ python3 --version
Python 3.5.1

#
Michaels-MacBook-Pro-2:udacityPythonCode2016 MenfiSystems$ python3 -V
Python 3.5.1

***
***
*** 


The Python Standard Library
https://docs.python.org/3/library/

#
# Python Standard Library
#   file (module) name webbrowser   - function - def open
#   file (module) name time         - function - def ctime ; def sleep
#

some_module.py - naming example 

# works
#import os
#os.listdir("foo")

# works
# from os import listdir
# listdir("foo")


print(file_list)

# implicit string conversion 
print ("\nBefore open Webbrowser" + time.ctime())

print ("\n\tfile_list is -> %s" % file_list)

print('file_list is -> {}'.format(file_list))
print('count is -> {}'.format(count))
 
# no op
for file in file_list:
	pass


# strip the digits out of the string file which is a file name abc99 for example 
numbersGone = ''.join(i for i in file if not i.isdigit())

PyDev is the best IDE to develop in Python. Has this feature and a lot of more.

# print ("x class name is\t= %s\n" % x.__class__.__name__)
# x class name is	= NoneType

# function definition 
def draw_square():
    print ("\tBegin draw_square function\n")
    print ("\tEnd draw_square function\n")

#function call 
draw_square()

    # opens a window
    window = turtle.Screen()
    window.bgcolor("red")

    # get / echo the background color - note could not find getter method
    # call bgcolor with no arguments
    # print(window.bgcolor())
    print ("\twindow.bgcolor() is %s" % window.bgcolor())

    # get the class of the window object
    print ("\twindow.__class__ is %s" % window.__class__)
    # window.__class__ is <class 'turtle._Screen'>

    # get the class name of the window object
    print ("\twindow.__class__.__name__ is %s\n" % window.__class__.__name__)
    # window.__class__.__name__ is _Screen
    
    # get the class methods 
    # print ("\tdir (window.__class__) is -> %s\n" % dir (window.__class__))
 
    # dir (window.__class__) is -> ['_RUNNING', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', ....
 
    # get the methods of the class
    # print(dir(turtle))
    # ['Canvas', 'Pen', 'RawPen', 'RawTurtle', 'Screen', 'ScrolledCanvas', 'Shape', 'TK', 'TNavigator', 'TPen', 'Tbuffer', 'Terminator', 'Turtle', ....


***
*** Twilio
***

Twilio - External Python package, not part of the Python Standard Library 

I understand this code is the only way to recover access to my account if I lose my phone.
WjFpwNUHeOZfioVigvWmO9/FqAXszOBvYeSSoKOa

sudo easy_install twilio
Password:
Searching for twilio
Best match: twilio 6.3.dev0
Processing twilio-6.3.dev0-py2.7.egg
twilio 6.3.dev0 is already the active version in easy-install.pth

Using /Library/Python/2.7/site-packages/twilio-6.3.dev0-py2.7.egg
Processing dependencies for twilio
Finished processing dependencies for twilio


MenfiSystems ~ $ sudo -H pip install --upgrade pip
Requirement already up-to-date: pip in /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages

MenfiSystems ~ $ sudo -H pip install --upgrade twilio
Requirement already up-to-date: twilio in /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages
Requirement already up-to-date: httplib2>=0.7 in /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages (from twilio)
Requirement already up-to-date: six in /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages (from twilio)
Requirement already up-to-date: pytz in /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages (from twilio)
Requirement already up-to-date: pysocks in /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages (from twilio)

***
***
***

AccountSID
Used to exercise the REST API
AC28c3cf8ede2e7907f73ee038226d629e

AuthToken
Keep this somewhere safe and secure
7b136e922b8514618e546e0986da2f66

Test AccountSID
Used to exercise the REST API
AC636af3753d1baeebd3ed4ab4f56386d0

Test AuthToken
Keep this somewhere safe and secure
6c4ae07cdcca470866b9dc05843b2b90

***
***
***
# built ins - handy builtins built ins 
https://docs.python.org/3/library/functions.html
print built in globals
print('\tglobals() is -> {}\n'.format(globals()))

print built in locals
print('\tlocals() is -> {}\n'.format(locals())) 


***
*** urllib.parse.quote
*** normalize or fix a broken url
*** see url_clean.py for greater detail
***

# normalized "broken" url
# fixed the space note the %20 also left the back slashes alone - safe argument 

my_quoted_fixed_url = urllib.parse.quote("http://www.purgomalum.com/service/contains profanity?text=shot", safe="%/:=&?~#+!$,;'@()*[]") - WORKS!! 

print("my_quoted_fixed_url is %s" % my_quoted_fixed_url)
# my_quoted_fixed_url is http://www.purgomalum.com/service/contains%20profanity?text=shot

print('\ttext_toCheck is -> {}\n'.format(text_to_check))
fixed_text_to_check = urllib.parse.quote(text_to_check, safe="%/:=&?~#+!$,;'@()*[]") - WORKS!!
print('\tfixed_text_to_check is -> {}\n'.format(fixed_text_to_check))

***
***
***

# Working profanity checking web site
http://www.wdylike.appspot.com/?q=shot

check_profanity08May2016.py - latest!!  


***
***
***

import urllib.request - working import 

# From the documentation 
urllib is a package (PACKAGE) that collects several modules (MODULES) for working with URLsb.request for opening and reading URLs
urllib.request for opening and reading URLs - One of the modules 

***
*** __init__ - constructor 
***


***
*** Misc
***

# Populate an array 
movies = [avatar, toy_story]

print("Number of toys - " + str(self.number_of_toys)) - string conversion print function

***
*** Style Guide 
***

https://google.github.io/styleguide/pyguide.html
Google Python Style Guide

# Constant - All CAPS 
VALID_RATINGS = ["G", "PG", "PG-13", "R"]

# unix file - Class inside 
media.py - lowercase - file contains Movie class 
import media

# class class definition - Cap - "M"
class Movie():


***
*** Classes     
***

http://www2.lib.uchicago.edu/keith/courses/python/class/5/

# Predefined class variables 
# Also run dir on a test empty class instance  

Attribute	Type			Read/Write	Description
__dict__	dictionary		R/W		The class name space.
__name__	string			R/O		The name of the class.
__bases__	tuple of classes	R/O		The classes from which this class inherits.
__doc__		string OR None		R/W		The class documentation string.
__module__	string			R/W		The name of the module in which this class was defined.

# Access the free text documentation in the Python class
# unix file - media.py
# class in media.py - Movie 
# class documentation __doc__ - pre defined class variable
class Movie():
    """ Move class documentation """ - free text comments in media.py file - class definition
# Access the pre defined class variable - not instance variable 
print('\tclass variable media.Movie.__doc__ is -> {}\n'.format(media.Movie.__doc__))
class variable media.Movie.__doc__ is ->  Move class documentation 

#
print('\tclass variable media.Movie.__name__ is -> {}\n'.format(media.Movie.__name__))
class variable media.Movie.__name__ is -> Movie
class Movie():

# Access - identify the file, unix file, that contains the Python class
print('\tclass variable media.Movie.__module__ is -> {}\n'.format(media.Movie.__module__)) - __module__
class variable media.Movie.__module__ is -> media 
-rw-r--r--  1 MenfiSystems  staff   730 May  9 14:25 media.py

# Access - identify - Parent classes inherited from 
print('\tclass variable media.Movie.__bases__ is -> {}\n'.format(media.Movie.__bases__))
class variable media.Movie.__bases__ is -> (<class 'object'>,)

# OK Access class variable in an instance  
print('\tclass variable toy_story.VALID_RATINGS are -> {}'.format(toy_story.VALID_RATINGS))

# BEST - Access class variable - note class name NOT instance name  
print('\tclass variable media.Movie.VALID_RATINGS are -> {}\n'.format(media.Movie.VALID_RATINGS))


# GenericClassInstance builtins built-ins 
dir(myGenericClassInstance) is -> [
'__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', 
'__gt__', '__hash__', '__init__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', 
'__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__']








